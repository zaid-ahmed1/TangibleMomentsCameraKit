#pragma kernel CSMain

// Input texture (read-only)
Texture2D<float4> _Input;
// Output texture (single channel grayscale)
RWTexture2D<float> _Output;

// Dimensions of the input and output textures.
int _InputWidth;
int _InputHeight;
int _OutputWidth;
int _OutputHeight;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if (id.x >= _OutputWidth || id.y >= _OutputHeight)
        return;
    
    // Map output pixel coordinates back to input coordinates.
    float ratioX = (float)_InputWidth / _OutputWidth;
    float ratioY = (float)_InputHeight / _OutputHeight;
    int inputX = (int)(id.x * ratioX);
    int inputY = (int)(id.y * ratioY);
    
    // Load the input pixel.
    float4 color = _Input.Load(int3(inputX, inputY, 0));
    // Compute grayscale value (assumes input color is in [0,1]).
    float gray = dot(color.rgb, float3(0.299, 0.587, 0.114));
    
    // Write out the grayscale value.
    _Output[int2(id.x, id.y)] = gray;
}
